@page "/Aufgabe22"

<PageTitle>Aufgabe 2.2</PageTitle>

<div>
    <input type="checkbox" @bind="showCalendar"> Use Calendar Dialog
    @if (showCalendar)
    {
        <input type="date" @bind="arrivalDate" />
        <input type="date" @bind="departureDate" />
    }
    else
    {
        <div>
            <input type="text" @bind="arrivalDate" placeholder="Arrival Date" />
            <input type="text" @bind="departureDate" placeholder="Departure Date" />
            <button @onclick="ShowCalendar">Open Calendar</button>
        </div>
    }
    <select @bind="type">
        <option value="Vollpension">Vollpension</option>
        <option value="Halbpension">Halbpension</option>
        <option value="Spezialangebot">Spezialangebot</option>
    </select>
    <input type="text" @bind="price" placeholder="Price" />
    <button @onclick="AddBooking">Add</button>
</div>


@if (bookings.Count > 0)
{
    <h4>Bookings:</h4>
    <table>
        <thead>
            <tr>
                <th>Art</th>
                <th>Von</th>
                <th>Bis</th>
                <th>Preis</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var booking in bookings)
            {
                <tr>
                    <td>@booking.Type</td>
                    <td>@booking.ArrivalDate.ToShortDateString()</td>
                    <td>@booking.DepartureDate.ToShortDateString()</td>                 
                    <td>@booking.Price.ToString()</td>
                </tr>
            }
        </tbody>
    </table>
}

@code{
    private bool showCalendar = false;
    private DateTime arrivalDate;
    private DateTime departureDate;
    private string type = "Vollpension";
    private decimal price;

    private List<Booking> bookings = new List<Booking>();

    private void ShowCalendar()
    {
        showCalendar = true;
    }

    private void AddBooking()
    {
        if (arrivalDate >= departureDate || price < 0)
        {
            // Handle date and price validation here
            return;
        }

        bookings.Add(new Booking
            {
                ArrivalDate = arrivalDate,
                DepartureDate = departureDate,
                Type = type,
                Price = price
            });

        // Reset form fields
        arrivalDate = DateTime.Now;
        departureDate = DateTime.Now;
        type = "Vollpension";
        price = 0.00m;
        showCalendar = false;
    }

    private class Booking
    {
        public DateTime ArrivalDate { get; set; }
        public DateTime DepartureDate { get; set; }
        public string Type { get; set; }
        public decimal Price { get; set; }
    }
}